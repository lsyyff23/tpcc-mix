========== logback=============
https://blog.csdn.net/cnwyt/article/details/80462896

1 logback 文档中可以看到，配置文件读取顺序如下: logback-test.xml > logback.grooy > logback.xml 。如果这个三个配置文件都没有，则走默认配置。

2  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jdkLevel>1.8</jdkLevel>
    <slf4j.version>1.7.5</slf4j.version>
    <logback.version>1.0.13</logback.version>
  </properties>
  <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
    </dependency>
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
    </dependency>
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>log4j-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.thrift</groupId>
        <artifactId>libthrift</artifactId>
        <version>0.11.0</version>
    </dependency>
  	<dependency>
  		<groupId>org.slf4j</groupId>
  		<artifactId>jul-to-slf4j</artifactId>
  		<version>${slf4j.version}</version>
  	</dependency>
  	<dependency>
  		<groupId>ch.qos.logback</groupId>
  		<artifactId>logback-core</artifactId>
  		<version>${logback.version}</version>
  	</dependency>
  	<dependency>
  		<groupId>ch.qos.logback</groupId>
  		<artifactId>logback-classic</artifactId>
  		<version>${logback.version}</version>
  	</dependency>

Console输出时：有2种方式：
	可配置logback-core + logback-classic   需要配置logback.xml
	也可以配置 <artifactId>slf4j-simple</artifactId> 无需配置logback.xml 默认级别是INFO...




export ARGS="-Djava.rmi.server.hostname=10.86.200.187 -Dcom.sun.management.jmxremote.port=2222 -Dcom.sun.management.jmxremote.ssl=false  -Dcom.sun.management.jmxremote.authenticate=false"
nohup java $ARGS -Djava.security.egd=file:/dev/./urandom  -jar pgxa.jar >/dev/null 2>&1 &

java visualVM.exe 查看